if(void 0!==navigator.userAgent&&navigator.userAgent.match(/(iPad|iPhone|iPod)/i)){var EVENT_NAMESPACE="IOS9FIX",MAX_DOM_DEPTH=100,blockEventFor=function($object,eventType){var eventQueue,eventRepo=new Array;if(void 0!==$._data($object.get(0),"events")&&(eventQueue=$._data($object.get(0),"events")[eventType]),void 0!==eventQueue){for(var i=0;i<eventQueue.length;i++)eventRepo.push({handler:eventQueue[i].handler,selector:eventQueue[i].selector,namespace:eventQueue[i].namespace});$object.off(eventType)}$object.on(eventType+"."+EVENT_NAMESPACE,"*",(function(event){event.stopImmediatePropagation()}));for(var i=0;i<eventRepo.length;i++){var _eventType=eventRepo[i].namespace?eventType+"."+eventRepo[i].namespace:eventType;$object.on(_eventType,eventRepo[i].selector,eventRepo[i].handler)}},executeMockedEventHandlers=function($object,mockedEventType,originalEvent){originalEvent.which=1;var mockedEventQueue,$target=$(originalEvent.target);if(void 0!==$._data($object.get(0),"events")&&(mockedEventQueue=$._data($object.get(0),"events")[mockedEventType]),void 0===mockedEventQueue)return!1;for(var preventEndlessLoop=0;preventEndlessLoop<MAX_DOM_DEPTH&&0!=$target.length;preventEndlessLoop++){for(var i=0;i<mockedEventQueue.length;i++)if(mockedEventQueue[i].namespace!==EVENT_NAMESPACE){if(void 0===mockedEventQueue[i].selector){if(!$target.is($object[0]))continue}else if(!$target.is(mockedEventQueue[i].selector))continue;if(!1===mockedEventQueue[i].handler.call($target[0],originalEvent)&&originalEvent.stopImmediatePropagation(),originalEvent.isImmediatePropagationStopped())break}if(originalEvent.isPropagationStopped())break;$target=$target.parent()}};$.each([$(document),$(window),$("body"),$("html")],(function(objectIndex,$object){$.each(["mousedown","click","mouseup"],(function(eventIndex,eventType){blockEventFor($object,eventType)}))}));var initMouseDownMock=function($object){$object.on("touchstart",(function(event){executeMockedEventHandlers($object,"mousedown",event)}))};$.each([$(document),$(window),$("body"),$("html")],(function(objectIndex,$object){initMouseDownMock($object)}));var initMouseUpMock=function($object){$object.on("touchend",(function(event){executeMockedEventHandlers($object,"mouseup",event)}))};$.each([$(document),$(window),$("body"),$("html")],(function(objectIndex,$object){initMouseUpMock($object)}));var initClickMock=function($object){var clickCancelationTimer,isClick,cursorX,cursorY,target;$object.on("touchstart",(function(event){isClick=!0,cursorX=event.originalEvent.touches[0].pageX,cursorY=event.originalEvent.touches[0].pageY,target=event.target,clickCancelationTimer=setTimeout((function(){isClick=!1}),300)})),$object.on("touchmove",(function(event){(Math.abs(cursorX-event.originalEvent.touches[0].pageX)>10||Math.abs(cursorY-event.originalEvent.touches[0].pageY)>10)&&(isClick=!1)})),$object.on("touchend",(function(event){clearTimeout(clickCancelationTimer),isClick&&executeMockedEventHandlers($object,"click",event)}))};$.each([$(document),$(window),$("body"),$("html")],(function(objectIndex,$object){initClickMock($object)}))}else console.log("Not required iOS fix");